Package de.rwth.i2.attestor.generated;

Helpers

	lcletter = ['a' .. 'z'];
	ucletter = ['A' .. 'Z'];
	digit = ['0' .. '9'];
	dollar = '$';
	at = '@';
	us = '_';
	variable = (lcletter | ucletter | digit | dollar | at | us)+;
	sellist = '[' variable (',' variable)* ']';
	varorsel = (variable | variable'.'variable);
	nonterminal = (lcletter | ucletter)+;
	
Tokens
	true = 'true';
	false = 'false';
	and = '&';
	or = '|';
	neg = '!';
	next = 'X';
	until = 'U';
	release = 'R';
	globally = 'G';
	finally = 'F';
	implies = '->';
	blank = ' ';
	lparen = '(';
	rparen = ')';
	lcurlyparen = '{';
	rcurlyparen = '}';
	aptree = 'tree';
	apbtree = 'btree';
	apsll = 'sll';
	apdll = 'dll';
	apvisited = 'visited';
	apvisitedby = 'visited(' variable ')';
	apidenticneighbours = 'identicNeighbours';
	apisreach = 'isReachable(' variable ',' variable ')';
	apisreachsel = 'isReachable(' variable ',' variable ',' sellist ')';
	apterminated = 'terminated';
	apequal = varorsel ' == ' varorsel;
	apnotequal = varorsel ' != ' varorsel;
	apntshape = 'L(' nonterminal ')';
	
Ignored Tokens
	blank;	
	
Productions
	ltlform = 
		{stateform} stateform 
		| {next} next ltlform
		| {globally} globally ltlform
		| {finally} finally ltlform
		| {term} term
		| {until} lparen [leftform]:ltlform until [rightform]:ltlform rparen
		| {release} lparen [leftform]:ltlform release [rightform]:ltlform rparen
		| {implies} lparen [leftform]:ltlform implies [rightform]:ltlform rparen;
	
	stateform = 
		{neg} neg ltlform
		| {and} lparen [leftform]:ltlform and [rightform]:ltlform rparen
		| {or} lparen [leftform]:ltlform or [rightform]:ltlform rparen; 
	term = 
		{true} true 
		| {false} false 		
		| {atomicprop} atomicprop;
	atomicprop = 
	    {tree} lcurlyparen aptree rcurlyparen
	    | {btree} lcurlyparen apbtree rcurlyparen
	    | {sll} lcurlyparen apsll rcurlyparen
	    | {dll} lcurlyparen apdll rcurlyparen
	    | {visited} lcurlyparen apvisited rcurlyparen
	    | {visitedby} lcurlyparen apvisitedby rcurlyparen
	    | {identicneighbours} lcurlyparen apidenticneighbours rcurlyparen
	    | {isreach} lcurlyparen apisreach rcurlyparen
	    | {isreachsel} lcurlyparen apisreachsel rcurlyparen
	    | {terminated} lcurlyparen apterminated rcurlyparen
	    | {equal} lcurlyparen apequal rcurlyparen
	    | {notequal} lcurlyparen apnotequal rcurlyparen
	    | {ntshape} lcurlyparen apntshape rcurlyparen
	    ;
	
