/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.rwth.i2.attestor.generated.analysis;

import java.util.*;
import de.rwth.i2.attestor.generated.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStateformLtlform(AStateformLtlform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANextLtlform(ANextLtlform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermLtlform(ATermLtlform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUntilLtlform(AUntilLtlform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReleaseLtlform(AReleaseLtlform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegStateform(ANegStateform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndStateform(AAndStateform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrStateform(AOrStateform node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueTerm(ATrueTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseTerm(AFalseTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtomicpropTerm(AAtomicpropTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtomicprop(TAtomicprop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeg(TNeg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNext(TNext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUntil(TUntil node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRelease(TRelease node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLparen(TLparen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRparen(TRparen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
