/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.rwth.i2.attestor.generated.node;

import de.rwth.i2.attestor.generated.analysis.*;

@SuppressWarnings("nls")
public final class AStateformLtlform extends PLtlform
{
    private PStateform _stateform_;

    public AStateformLtlform()
    {
        // Constructor
    }

    public AStateformLtlform(
        @SuppressWarnings("hiding") PStateform _stateform_)
    {
        // Constructor
        setStateform(_stateform_);

    }

    @Override
    public Object clone()
    {
        return new AStateformLtlform(
            cloneNode(this._stateform_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStateformLtlform(this);
    }

    public PStateform getStateform()
    {
        return this._stateform_;
    }

    public void setStateform(PStateform node)
    {
        if(this._stateform_ != null)
        {
            this._stateform_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stateform_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stateform_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stateform_ == child)
        {
            this._stateform_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stateform_ == oldChild)
        {
            setStateform((PStateform) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
